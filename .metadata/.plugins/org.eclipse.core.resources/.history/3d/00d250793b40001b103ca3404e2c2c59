import java.sql.Connection;
import java.sql.PreparedStatement;

import config.DBConnection;

public class mainApp {
	
	public static void 추가(int id) {
		String sql = "INSERT INTO test1(id) VALUES(?)";
		Connection conn = DBConnection.getInstance();
		try {
			PreparedStatement pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, id);	// 인젝션 공격을 막아 준다.
			int result = pstmt.executeUpdate();	// 변경된 row count를 리턴, -1은 오류시에 리턴된다.
			System.out.println("result : " + result);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	public static void 삭제(int id) {
		String sql = "DELETE FROM test1 WHERE id = ?";
		Connection conn = DBConnection.getInstance();
		try {
			PreparedStatement pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, id);	// 인젝션 공격을 막아 준다.
			int result = pstmt.executeUpdate();	// 변경된 row count를 리턴, -1은 오류시에 리턴된다.
			System.out.println("result : " + result);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	public static void 수정(int id, int id2) {
		String sql = "UPDATE test1 SET id = ? WHERE id = ?";
		Connection conn = DBConnection.getInstance();
		try {
			PreparedStatement pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, id);	// 인젝션 공격을 막아 준다.
			pstmt.setInt(2, id2);
			int result = pstmt.executeUpdate();	// 변경된 row count를 리턴, -1은 오류시에 리턴된다.
			System.out.println("result : " + result);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public static void main(String[] args) {
		추가(9);
		삭제(1);
		수정(2,4);
	}

}
